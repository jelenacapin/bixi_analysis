<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Stations 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <desc>
          <formatted-text>
            <run>Top 10 stations in terms of percentage_roundtrips</run>
          </formatted-text>
        </desc>
        <range granularity='5' max='20' min='5' />
      </column>
    </datasource>
    <datasource caption='trips+ (bixi)' inline='true' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0cnumjk0rnet2e172phxs1garfkw'>
            <connection class='mysql' dbname='bixi' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.0cnumjk0rnet2e172phxs1garfkw' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.0cnumjk0rnet2e172phxs1garfkw' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.0cnumjk0rnet2e172phxs1garfkw' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.0cnumjk0rnet2e172phxs1garfkw' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[start_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_station_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[end_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_station_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_member</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_member]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>is_member</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059198482:qk]&quot;' value='Short Trips (&lt;=30min)' />
          <alias key='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059505683:qk]&quot;' value='Medium Trips (30-45mins)' />
          <alias key='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059665428:qk]&quot;' value='Long Trips (45-60mins)' />
        </aliases>
      </column>
      <column caption='Subset Labels' datatype='string' name='[Calculation_1369938753077301250]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Top 10 Stations by Percentage of Roundtrips]&#13;&#10;THEN &quot;Top&quot; + str([Parameters].[Parameter 1]) + &quot;Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
        <aliases>
          <alias key='&quot;Top5Stations&quot;' value='Top10Stations' />
        </aliases>
      </column>
      <column caption='Duration in Minutes' datatype='real' name='[Calculation_1369938753844625411]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[duration_sec]/60' />
      </column>
      <column caption='Non-members' datatype='integer' name='[Calculation_1369938753895444487]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='count([Calculation_1369938753844625411]) - sum([is_member])' />
      </column>
      <column caption='nonm test' datatype='integer' name='[Calculation_1369938753925873672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([is_member]*(-1)) + 1' />
      </column>
      <column caption='Q3.1 test for short ' datatype='real' name='[Calculation_1369938753927663626]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Calculation_1369938753844625411]&lt;=30 THEN 2.99&#13;&#10;ELSEIF [Calculation_1369938753844625411] &lt;=45 THEN 4.79&#13;&#10;ELSEIF [Calculation_1369938753844625411] &lt;=60 THEN 7.79&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Q3.1 - IIF short' datatype='string' name='[Calculation_1369938754056204303]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &lt; 30.000001, &quot;short&quot;, &quot;not-short&quot;)' />
      </column>
      <column caption='Q3.1 - IIF medium' datatype='string' name='[Calculation_1369938754058690576]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &lt; 45.000001 AND [Calculation_1369938753844625411] &gt; 30, &quot;medium&quot;, &quot;not-medium&quot;)' />
      </column>
      <column caption='Q3.1 - IIF long' datatype='string' name='[Calculation_1369938754058989585]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &gt; 45 AND [Calculation_1369938753844625411]&lt;= 60, &quot;long&quot;, &quot;not-long&quot;)' />
      </column>
      <column caption='Q3.1 short2.99' datatype='real' name='[Calculation_1369938754059198482]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1369938754056204303] = &quot;short&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 2.99&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Q3.1 medium4.79 ' datatype='real' name='[Calculation_1369938754059505683]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1369938754058690576] = &quot;medium&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 4.79&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Q3.1 long7.79' datatype='real' name='[Calculation_1369938754059665428]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1369938754058989585] = &quot;long&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 7.79&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='testing' datatype='real' name='[Calculation_1369938754077831194]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1369938753925873672]) * 2.99' />
      </column>
      <column caption='% of Revenue - Short' datatype='real' name='[Calculation_1369938754100441115]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100*(SUM([Calculation_1369938754059198482])) / [Calculation_1369938754197155881]' />
      </column>
      <column caption='Total Revenue - Single Trips' datatype='real' name='[Calculation_1369938754197155881]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1369938754059198482]) +  SUM([Calculation_1369938754059505683]) +  SUM([Calculation_1369938754059665428])' />
      </column>
      <column caption='% of Revenue - Medium ' datatype='real' name='[Calculation_1369938754198065194]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100*(SUM([Calculation_1369938754059505683]) / [Calculation_1369938754197155881])' />
      </column>
      <column caption='% of Revenue - Long' datatype='real' name='[Calculation_1369938754198282283]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100*(SUM([Calculation_1369938754059665428]) / [Calculation_1369938754197155881])' />
      </column>
      <column caption='Military Time' datatype='datetime' name='[Calculation_1369938754199085100]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='(DATETRUNC(&apos;hour&apos;, datetime([start_date])))' />
      </column>
      <column caption='Percentage of Trips by Members' datatype='real' name='[Calculation_1425107848246390785]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([is_member]))/(COUNT([id]))*100' />
      </column>
      <column caption='Roundtrips' datatype='integer' name='[Calculation_1425107848251944962]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([start_station_code]=[end_station_code]) THEN 1 ELSE 0 END' />
      </column>
      <column caption='Percentage_Roundtrips' datatype='real' name='[Calculation_1425107848257716228]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([Calculation_1425107848251944962]))/(COUNT([id])))*100' />
      </column>
      <column aggregation='None' caption='Duration in Minutes (bin)' datatype='integer' name='[Duration in Minutes (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_1369938753844625411]' peg='0' size='2' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
      <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
      <column caption='End Date' datatype='datetime' name='[end_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[latitude]' derivation='Attribute' name='[attr:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='Attribute' name='[attr:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938753844625411]' derivation='Avg' name='[avg:Calculation_1369938753844625411:qk]' pivot='key' type='quantitative' />
      <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938753844625411]' derivation='Count' name='[cnt:Calculation_1369938753844625411:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938753895444487]' derivation='Count' name='[cnt:Calculation_1369938753895444487:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938753844625411]' derivation='CountD' name='[ctd:Calculation_1369938753844625411:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938754199085100]' derivation='Hour' name='[hr:Calculation_1369938754199085100:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Top 10 Stations by Percentage of Roundtrips]' derivation='InOut' name='[io:Top 10 Stations by Percentage of Roundtrips:nk]' pivot='key' type='nominal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1369938753844625411]' derivation='Sum' name='[sum:Calculation_1369938753844625411:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938753895444487]' derivation='Sum' name='[sum:Calculation_1369938753895444487:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938754059198482]' derivation='Sum' name='[sum:Calculation_1369938754059198482:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938754059505683]' derivation='Sum' name='[sum:Calculation_1369938754059505683:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1369938754059665428]' derivation='Sum' name='[sum:Calculation_1369938754059665428:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1425107848251944962]' derivation='Sum' name='[sum:Calculation_1425107848251944962:qk]' pivot='key' type='quantitative' />
      <column-instance column='[duration_sec]' derivation='Sum' name='[sum:duration_sec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_member]' derivation='Sum' name='[sum:is_member:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1425107848246390785]' derivation='User' name='[usr:Calculation_1425107848246390785:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1425107848257716228]' derivation='User' name='[usr:Calculation_1425107848257716228:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
      <group caption='Top 10 Stations by Percentage of Roundtrips' name='[Top 10 Stations by Percentage of Roundtrips]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end'>
          <groupfilter direction='DESC' expression='((SUM([Calculation_1425107848251944962]))/(Count([id])))*100' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.959302' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0406977' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:start_date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[attr:latitude:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:latitude:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:latitude:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[attr:longitude:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:longitude:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:longitude:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:name:nk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1425107848251944962:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:Calculation_1369938753844625411:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[cnt:Calculation_1369938753844625411:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[ctd:Calculation_1369938753844625411:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938753844625411:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:duration_sec:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848246390785:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059505683:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059665428:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[cnt:Calculation_1369938753895444487:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938753895444487:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:Calculation_1369938754199085100:ok]' palette='jewel_bright_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>4</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>13</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>22</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>5</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>14</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>23</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>6</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>15</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>7</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>16</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>8</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>17</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>0</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>9</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>18</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>2</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>11</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>20</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>3</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>12</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>21</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>1</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>10</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>19</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ann / William&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Clark / Evans&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Congres&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Commune / King&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gare Canora&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Greene / Workman&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Island / Centre&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;La Ronde&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marché Atwater&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Milton / Clark&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Milton / University&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Murray / William&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Nazareth / William&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ottawa / William&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parc Plage&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Place du Commerce&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Place Longueuil&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Square Phillips&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Square St-Louis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Square Victoria&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-André / Robin&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
            </map>
            <map to='#2c5a85'>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2c5a86'>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
            </map>
            <map to='#2c5a86'>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
            </map>
            <map to='#2c5a86'>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
            </map>
            <map to='#2c5b86'>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
            </map>
            <map to='#2c5b86'>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
            </map>
            <map to='#2c5b87'>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
            </map>
            <map to='#2c5b87'>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
            </map>
            <map to='#2c5c87'>
              <bucket>&quot;Victoria Hall&quot;</bucket>
            </map>
            <map to='#2c5c87'>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
            </map>
            <map to='#2c5c87'>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2c5c88'>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#2c5d88'>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
            </map>
            <map to='#2d5d88'>
              <bucket>&quot;University / des Pins&quot;</bucket>
            </map>
            <map to='#2d5d88'>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#2d5d88'>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
            </map>
            <map to='#2d5e89'>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
            </map>
            <map to='#2d5e89'>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
            </map>
            <map to='#2d5e89'>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
            </map>
            <map to='#2d5e89'>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
            </map>
            <map to='#2d5f89'>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
            </map>
            <map to='#2d5f8a'>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
            </map>
            <map to='#2d5f8a'>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
            </map>
            <map to='#2d5f8a'>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2d608a'>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
            </map>
            <map to='#2d608b'>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
            </map>
            <map to='#2d608b'>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
            </map>
            <map to='#2d608b'>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#2d618b'>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
            </map>
            <map to='#2d618b'>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
            </map>
            <map to='#2e618c'>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
            </map>
            <map to='#2e618c'>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
            </map>
            <map to='#2e628c'>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
            </map>
            <map to='#2e628c'>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
            </map>
            <map to='#2e628c'>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
            </map>
            <map to='#2e628d'>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 10 Stations by Percentage of Roundtrips:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Stations 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <desc>
            <formatted-text>
              <run>Top 10 stations in terms of percentage_roundtrips</run>
            </formatted-text>
          </desc>
          <range granularity='5' max='20' min='5' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='trips' id='trips_A7B56BBA4B6346C7B6B35A970B14E6C5'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[trips].[start_station_code]' />
                    <expression op='[stations].[code]' />
                  </expression>
                </clause>
                <relation connection='mysql.0cnumjk0rnet2e172phxs1garfkw' name='trips' table='[trips]' type='table' />
                <relation connection='mysql.0cnumjk0rnet2e172phxs1garfkw' name='stations' table='[stations]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_E48BDF6FB7894E2D89F49D83E6A06117]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q1.1: Total Trips by Month' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Q1.1: Total Trips by Month' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Q1.1: Total Trips by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Trips by Month </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
            <format attr='title' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' scope='rows' value='Trips' />
            <format attr='hnlabel' value='horizontal' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='subtotal' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[mn:start_date:ok]' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' value='false' />
            <format attr='vertical-align' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[mn:start_date:ok]' value='top' />
            <format attr='display' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[mn:start_date:ok]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='108' />
                <format attr='maxwidth' value='108' />
                <format attr='minheight' value='472' />
                <format attr='maxheight' value='472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]</rows>
        <cols>([federated.1wd0upb0stfn1g1a4s0830mny6cq].[mn:start_date:ok] / [federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok])</cols>
      </table>
      <simple-id uuid='{24B6602E-FA2B-46D4-9476-FDA697E09893}' />
    </worksheet>
    <worksheet name='Q1.2: % of Trips by Month and Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Total Trips by Month in 2016 and 2017</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' derivation='Count' name='[pcto:cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[mn:start_date:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[pcto:cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk:3]' scope='rows' value='Percentage of Total Trips' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' />
              <tooltip column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[pcto:cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk:3]</rows>
        <cols>([federated.1wd0upb0stfn1g1a4s0830mny6cq].[mn:start_date:ok] / [federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok])</cols>
      </table>
      <simple-id uuid='{9DA49F4F-F73C-43B8-A3EC-08150C854D25}' />
    </worksheet>
    <worksheet name='Q1.3: Percentage of Monthly Trips by Members in 2017'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Monthly Trips by Members in 2017</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Percentage of Trips by Members' datatype='real' name='[Calculation_1425107848246390785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([is_member]))/(COUNT([id]))*100' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1425107848246390785]' derivation='User' name='[usr:Calculation_1425107848246390785:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]'>
            <groupfilter function='member' level='[yr:start_date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[mn:start_date:ok]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' />
              <tooltip column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848246390785:qk]</rows>
        <cols>([federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok] / [federated.1wd0upb0stfn1g1a4s0830mny6cq].[mn:start_date:ok])</cols>
      </table>
      <simple-id uuid='{EEE68637-3003-4EE2-B1F4-CCB7055746AF}' />
    </worksheet>
    <worksheet name='Q1.4: Map of Top 10 Stations for Roundtrips (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Stations with the Highest Percentage of Roundtrips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Stations 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <desc>
                <formatted-text>
                  <run>Top 10 stations in terms of percentage_roundtrips</run>
                </formatted-text>
              </desc>
              <range granularity='5' max='20' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Subset Labels' datatype='string' name='[Calculation_1369938753077301250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 10 Stations by Percentage of Roundtrips]&#13;&#10;THEN &quot;Top&quot; + str([Parameters].[Parameter 1]) + &quot;Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;Top5Stations&quot;' value='Top10Stations' />
              </aliases>
            </column>
            <column caption='Roundtrips' datatype='integer' name='[Calculation_1425107848251944962]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([start_station_code]=[end_station_code]) THEN 1 ELSE 0 END' />
            </column>
            <column caption='Percentage_Roundtrips' datatype='real' name='[Calculation_1425107848257716228]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Calculation_1425107848251944962]))/(COUNT([id])))*100' />
            </column>
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Top 10 Stations by Percentage of Roundtrips]' derivation='InOut' name='[io:Top 10 Stations by Percentage of Roundtrips:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1369938753077301250]' derivation='None' name='[none:Calculation_1369938753077301250:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1425107848257716228]' derivation='User' name='[usr:Calculation_1425107848257716228:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938753077301250:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1369938753077301250:nk]' />
              <groupfilter function='member' level='[none:Calculation_1369938753077301250:nk]' member='&quot;Others&quot;' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:longitude:qk]' field-type='quantitative' max='-8182046.0386914816' min='-8208975.1994278524' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:latitude:qk]' field-type='quantitative' max='5710975.4023687951' min='5688913.9028531956' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[io:Top 10 Stations by Percentage of Roundtrips:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]' />
              <text column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='562' />
                <format attr='maxheight' value='562' />
                <format attr='minwidth' value='686' />
                <format attr='maxwidth' value='686' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:latitude:qk]</rows>
        <cols>(([federated.1wd0upb0stfn1g1a4s0830mny6cq].[io:Top 10 Stations by Percentage of Roundtrips:nk] / [federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938753077301250:nk]) * [federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:longitude:qk])</cols>
      </table>
      <simple-id uuid='{BE0554A8-B075-4F38-88D3-75808C7E6852}' />
    </worksheet>
    <worksheet name='Q1.4: Top 10 Stations for Roundtrips'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Stations with the Highest Percentage of Roundtrips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Stations 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <desc>
                <formatted-text>
                  <run>Top 10 stations in terms of percentage_roundtrips</run>
                </formatted-text>
              </desc>
              <range granularity='5' max='20' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Subset Labels' datatype='string' name='[Calculation_1369938753077301250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Top 10 Stations by Percentage of Roundtrips]&#13;&#10;THEN &quot;Top&quot; + str([Parameters].[Parameter 1]) + &quot;Stations&quot;&#13;&#10;ELSE &quot;Others&quot;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;Top5Stations&quot;' value='Top10Stations' />
              </aliases>
            </column>
            <column caption='Roundtrips' datatype='integer' name='[Calculation_1425107848251944962]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([start_station_code]=[end_station_code]) THEN 1 ELSE 0 END' />
            </column>
            <column caption='Percentage_Roundtrips' datatype='real' name='[Calculation_1425107848257716228]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Calculation_1425107848251944962]))/(COUNT([id])))*100' />
            </column>
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Top 10 Stations by Percentage of Roundtrips]' derivation='InOut' name='[io:Top 10 Stations by Percentage of Roundtrips:nk]' pivot='key' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1369938753077301250]' derivation='None' name='[none:Calculation_1369938753077301250:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1425107848257716228]' derivation='User' name='[usr:Calculation_1425107848257716228:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938753077301250:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1369938753077301250:nk]' />
              <groupfilter function='member' level='[none:Calculation_1369938753077301250:nk]' member='&quot;Others&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]' scope='rows' value='Roundtrips as a Percentage of Total Trips' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[io:Top 10 Stations by Percentage of Roundtrips:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[io:Top 10 Stations by Percentage of Roundtrips:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]</rows>
        <cols>([federated.1wd0upb0stfn1g1a4s0830mny6cq].[io:Top 10 Stations by Percentage of Roundtrips:nk] / ([federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938753077301250:nk] / [federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:name:nk]))</cols>
      </table>
      <simple-id uuid='{4666F7B9-D7DE-4B10-BA5D-A04A46BD3DF3}' />
    </worksheet>
    <worksheet name='Q2.1: Relationship between % of roundtrips and % by members'>
      <layout-options>
        <title>
          <formatted-text>
            <run>The Negative Correlation Between Roundtrips and Trips by Members</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Percentage of Trips by Members' datatype='real' name='[Calculation_1425107848246390785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([is_member]))/(COUNT([id]))*100' />
            </column>
            <column caption='Roundtrips' datatype='integer' name='[Calculation_1425107848251944962]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([start_station_code]=[end_station_code]) THEN 1 ELSE 0 END' />
            </column>
            <column caption='Percentage_Roundtrips' datatype='real' name='[Calculation_1425107848257716228]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Calculation_1425107848251944962]))/(COUNT([id])))*100' />
            </column>
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1425107848246390785]' derivation='User' name='[usr:Calculation_1425107848246390785:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1425107848257716228]' derivation='User' name='[usr:Calculation_1425107848257716228:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]' scope='rows' value='Percentage of Total Trips as Roundtrips' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]</rows>
        <cols>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848246390785:qk]</cols>
      </table>
      <simple-id uuid='{CBE5ED5E-A8B6-45C8-BFBB-9EB6C9952F01}' />
    </worksheet>
    <worksheet name='Q2.2: Total Trips (for Nonmembers)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distribution of Total Trips vs. Member Trips vs. Non-members Trips by Duration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Duration in Minutes' datatype='real' name='[Calculation_1369938753844625411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='Non-members' datatype='integer' name='[Calculation_1369938753895444487]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='count([Calculation_1369938753844625411]) - sum([is_member])' />
            </column>
            <column aggregation='None' caption='Duration in Minutes (bin)' datatype='integer' name='[Duration in Minutes (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_1369938753844625411]' peg='0' size='2' />
            </column>
            <column-instance column='[Calculation_1369938753844625411]' derivation='Count' name='[cnt:Calculation_1369938753844625411:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Duration in Minutes (bin)]' derivation='None' name='[none:Duration in Minutes (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_member]' derivation='Sum' name='[sum:is_member:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938753895444487]' derivation='User' name='[usr:Calculation_1369938753895444487:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Duration in Minutes (bin):qk]' value='63' />
            <format attr='title' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]' scope='rows' value='Members' />
            <format attr='auto-subtitle' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]' scope='rows' value='Frequency' />
            <format attr='auto-subtitle' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938753895444487:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938753895444487:qk]' scope='rows' value='Frequency' />
            <format attr='title' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[cnt:Calculation_1369938753844625411:qk]' scope='rows' value='Total Trips' />
            <format attr='auto-subtitle' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[cnt:Calculation_1369938753844625411:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[cnt:Calculation_1369938753844625411:qk]' scope='rows' value='Frequency' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='587' />
                <format attr='maxwidth' value='587' />
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='587' />
                <format attr='maxwidth' value='587' />
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[cnt:Calculation_1369938753844625411:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='587' />
                <format attr='maxwidth' value='587' />
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='587' />
                <format attr='maxwidth' value='587' />
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='587' />
                <format attr='maxwidth' value='587' />
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='587' />
                <format attr='maxwidth' value='587' />
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938753895444487:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='587' />
                <format attr='maxwidth' value='587' />
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='587' />
                <format attr='maxwidth' value='587' />
                <format attr='minheight' value='452' />
                <format attr='maxheight' value='452' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wd0upb0stfn1g1a4s0830mny6cq].[cnt:Calculation_1369938753844625411:qk] + ([federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk] + [federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938753895444487:qk]))</rows>
        <cols>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Duration in Minutes (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Duration in Minutes (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{3A41021E-8D1C-4631-9B19-436A65061B18}' />
    </worksheet>
    <worksheet name='Q2.3: Duration Across Montreal '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Duration of Trips Across Montreal</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Duration in Minutes' datatype='real' name='[Calculation_1369938753844625411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1369938753844625411]' derivation='Avg' name='[avg:Calculation_1369938753844625411:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1369938753844625411]' derivation='Avg' name='[avg:Calculation_1369938753844625411:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938753844625411]' derivation='Sum' name='[sum:Calculation_1369938753844625411:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938753844625411:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:longitude:qk]' field-type='quantitative' max='-8170144.2284960374' min='-8227367.291604735' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:latitude:qk]' field-type='quantitative' max='5722170.7651469223' min='5688701.5502552493' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:Calculation_1369938753844625411:qk]' num-steps='8' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:Calculation_1369938753844625411:qk]' />
              <size column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:Calculation_1369938753844625411:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:latitude:qk]</rows>
        <cols>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{1FA18AA3-BC43-488C-BC31-3F7262E57298}' />
    </worksheet>
    <worksheet name='Q3.1 &amp; 3.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Revenue Generated by Non-Member Single Trips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Duration in Minutes' datatype='real' name='[Calculation_1369938753844625411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='nonm test' datatype='integer' name='[Calculation_1369938753925873672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([is_member]*(-1)) + 1' />
            </column>
            <column caption='Q3.1 - IIF short' datatype='string' name='[Calculation_1369938754056204303]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &lt; 30.000001, &quot;short&quot;, &quot;not-short&quot;)' />
            </column>
            <column caption='Q3.1 - IIF medium' datatype='string' name='[Calculation_1369938754058690576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &lt; 45.000001 AND [Calculation_1369938753844625411] &gt; 30, &quot;medium&quot;, &quot;not-medium&quot;)' />
            </column>
            <column caption='Q3.1 - IIF long' datatype='string' name='[Calculation_1369938754058989585]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &gt; 45 AND [Calculation_1369938753844625411]&lt;= 60, &quot;long&quot;, &quot;not-long&quot;)' />
            </column>
            <column caption='Q3.1 short2.99' datatype='real' name='[Calculation_1369938754059198482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1369938754056204303] = &quot;short&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 2.99&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Q3.1 medium4.79 ' datatype='real' name='[Calculation_1369938754059505683]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1369938754058690576] = &quot;medium&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 4.79&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Q3.1 long7.79' datatype='real' name='[Calculation_1369938754059665428]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1369938754058989585] = &quot;long&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 7.79&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='% of Revenue - Short' datatype='real' name='[Calculation_1369938754100441115]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*(SUM([Calculation_1369938754059198482])) / [Calculation_1369938754197155881]' />
            </column>
            <column caption='Total Revenue - Single Trips' datatype='real' name='[Calculation_1369938754197155881]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1369938754059198482]) +  SUM([Calculation_1369938754059505683]) +  SUM([Calculation_1369938754059665428])' />
            </column>
            <column caption='% of Revenue - Medium ' datatype='real' name='[Calculation_1369938754198065194]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*(SUM([Calculation_1369938754059505683]) / [Calculation_1369938754197155881])' />
            </column>
            <column caption='% of Revenue - Long' datatype='real' name='[Calculation_1369938754198282283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*(SUM([Calculation_1369938754059665428]) / [Calculation_1369938754197155881])' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1369938754059198482]' derivation='Sum' name='[sum:Calculation_1369938754059198482:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754059505683]' derivation='Sum' name='[sum:Calculation_1369938754059505683:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754059665428]' derivation='Sum' name='[sum:Calculation_1369938754059665428:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754100441115]' derivation='User' name='[usr:Calculation_1369938754100441115:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754197155881]' derivation='User' name='[usr:Calculation_1369938754197155881:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754198065194]' derivation='User' name='[usr:Calculation_1369938754198065194:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754198282283]' derivation='User' name='[usr:Calculation_1369938754198282283:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059665428:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059505683:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059198482:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[Multiple Values]' scope='cols' value='Revenue (in dollars)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]' value='136' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938754197155881:qk]' />
              <tooltip column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938754100441115:qk]' />
              <tooltip column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938754198065194:qk]' />
              <tooltip column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938754198282283:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]</rows>
        <cols>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{1F8B53CE-1C42-4AF3-9DB1-6BC5C9B60F3D}' />
    </worksheet>
    <worksheet name='Q3.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Revenue Generated by Flat Rate Single Trips </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Duration in Minutes' datatype='real' name='[Calculation_1369938753844625411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='nonm test' datatype='integer' name='[Calculation_1369938753925873672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([is_member]*(-1)) + 1' />
            </column>
            <column caption='Q3.1 - IIF short' datatype='string' name='[Calculation_1369938754056204303]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &lt; 30.000001, &quot;short&quot;, &quot;not-short&quot;)' />
            </column>
            <column caption='Q3.1 - IIF medium' datatype='string' name='[Calculation_1369938754058690576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &lt; 45.000001 AND [Calculation_1369938753844625411] &gt; 30, &quot;medium&quot;, &quot;not-medium&quot;)' />
            </column>
            <column caption='Q3.1 - IIF long' datatype='string' name='[Calculation_1369938754058989585]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &gt; 45 AND [Calculation_1369938753844625411]&lt;= 60, &quot;long&quot;, &quot;not-long&quot;)' />
            </column>
            <column caption='Q3.1 short2.99' datatype='real' name='[Calculation_1369938754059198482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1369938754056204303] = &quot;short&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 2.99&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Q3.1 medium4.79 ' datatype='real' name='[Calculation_1369938754059505683]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1369938754058690576] = &quot;medium&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 4.79&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Q3.1 long7.79' datatype='real' name='[Calculation_1369938754059665428]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1369938754058989585] = &quot;long&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 7.79&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='% of Revenue - Short' datatype='real' name='[Calculation_1369938754100441115]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*(SUM([Calculation_1369938754059198482])) / [Calculation_1369938754197155881]' />
            </column>
            <column caption='Total Revenue - Single Trips' datatype='real' name='[Calculation_1369938754197155881]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1369938754059198482]) +  SUM([Calculation_1369938754059505683]) +  SUM([Calculation_1369938754059665428])' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1369938754059198482]' derivation='Sum' name='[sum:Calculation_1369938754059198482:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754059505683]' derivation='Sum' name='[sum:Calculation_1369938754059505683:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754059665428]' derivation='Sum' name='[sum:Calculation_1369938754059665428:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938754100441115]' derivation='User' name='[usr:Calculation_1369938754100441115:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059665428:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059505683:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059198482:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059505683:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059665428:qk]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[Multiple Values]' scope='rows' value='Revenue (in dollars)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938754100441115:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[Multiple Values]</rows>
        <cols>([federated.1wd0upb0stfn1g1a4s0830mny6cq].[wd:start_date:ok] / [federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{DF18171B-C4FB-4D1E-BE3C-AF91C1B8A366}' />
    </worksheet>
    <worksheet name='Q3.3 - Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Revenue Generated by Flat Rate Single Trips by Hour &amp; Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Duration in Minutes' datatype='real' name='[Calculation_1369938753844625411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='nonm test' datatype='integer' name='[Calculation_1369938753925873672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([is_member]*(-1)) + 1' />
            </column>
            <column caption='Q3.1 - IIF short' datatype='string' name='[Calculation_1369938754056204303]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Calculation_1369938753844625411] &lt; 30.000001, &quot;short&quot;, &quot;not-short&quot;)' />
            </column>
            <column caption='Q3.1 short2.99' datatype='real' name='[Calculation_1369938754059198482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1369938754056204303] = &quot;short&quot; AND [Calculation_1369938753925873672]&gt;0 THEN 2.99&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Military Time' datatype='datetime' name='[Calculation_1369938754199085100]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='(DATETRUNC(&apos;hour&apos;, datetime([start_date])))' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1369938754199085100]' derivation='Hour' name='[hr:Calculation_1369938754199085100:ok]' pivot='key' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1369938754059198482]' derivation='Sum' name='[sum:Calculation_1369938754059198482:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[hr:Calculation_1369938754199085100:ok]' value='164' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059198482:qk]' palette='blue_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059198482:qk]' />
              <text column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059198482:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[hr:Calculation_1369938754199085100:ok]</rows>
        <cols>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[wd:start_date:ok]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Highest revenue hour of the day and week</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[wd:start_date:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[hr:Calculation_1369938754199085100:ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[hr:Calculation_1369938754199085100:ok]</field>
                      <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059198482:qk]</field>
                      <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[wd:start_date:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>15</value>
                    <value>80296.449999999997</value>
                    <value>1</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C544AD14-F91F-4A0E-8912-4B8E0688F713}' />
    </worksheet>
    <worksheet name='Q4: Member Usage Across Montreal (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Member Usage Across Montreal</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.1wd0upb0stfn1g1a4s0830mny6cq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wd0upb0stfn1g1a4s0830mny6cq'>
            <column caption='Duration in Minutes' datatype='real' name='[Calculation_1369938753844625411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_A7B56BBA4B6346C7B6B35A970B14E6C5]' role='measure' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1369938753844625411]' derivation='Sum' name='[sum:Calculation_1369938753844625411:qk]' pivot='key' type='quantitative' />
            <column-instance column='[is_member]' derivation='Sum' name='[sum:is_member:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[__tableau_internal_object_id__].[cnt:trips_A7B56BBA4B6346C7B6B35A970B14E6C5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938753844625411:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:longitude:qk]' field-type='quantitative' max='-8172201.258719461' min='-8209980.8050572081' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:latitude:qk]' field-type='quantitative' max='5713078.9977783132' min='5690982.1073604403' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]' />
              <size column='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:latitude:qk]</rows>
        <cols>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B523D089-6510-4A1C-8663-EDE7BB211053}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Stations 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <desc>
            <formatted-text>
              <run>Top 10 stations in terms of percentage_roundtrips</run>
            </formatted-text>
          </desc>
          <range granularity='5' max='20' min='5' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='45' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='12' param='horz' type-v2='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='7' type-v2='layout-basic' w='82400' x='800' y='1000'>
                <zone h='49000' id='6' name='Q2.3: Duration Across Montreal ' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='10' name='Q4: Member Usage Across Montreal (2)' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='43' name='Q1.4: Top 10 Stations for Roundtrips' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='44' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9875' id='46' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='47' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='43' is-fixed='true' name='Q1.4: Top 10 Stations for Roundtrips' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9875' id='46' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='6' is-fixed='true' name='Q2.3: Duration Across Montreal ' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Q4: Member Usage Across Montreal (2)' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{76765BB4-3A87-4275-AE3A-77AD77791408}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Q1.1: Total Trips by Month'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4AD2A8E2-09C8-42E8-A0C2-AFED1721ADCD}' />
    </window>
    <window class='worksheet' name='Q1.2: % of Trips by Month and Year'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='1' param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1C5E66B-90CD-40C5-9607-9D5E551B47A2}' />
    </window>
    <window class='worksheet' name='Q1.3: Percentage of Monthly Trips by Members in 2017'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5E1FF7D3-7203-48EF-9FA2-D0201A74FE9A}' />
    </window>
    <window class='worksheet' name='Q1.4: Top 10 Stations for Roundtrips'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='32'>
            <card type='rows' />
          </strip>
          <strip size='17'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[io:Top 10 Stations by Percentage of Roundtrips:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938753077301250:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ADAFA3D7-13E3-4AFA-9010-8D395AC51570}' />
    </window>
    <window class='worksheet' name='Q1.4: Map of Top 10 Stations for Roundtrips (2)'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='32'>
            <card type='rows' />
          </strip>
          <strip size='16'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938753077301250:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:name:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1425107848257716228:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{150AF19D-D887-4334-A877-5CE4CF150C7B}' />
    </window>
    <window class='worksheet' name='Q2.1: Relationship between % of roundtrips and % by members'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{F5A61600-D50D-4C2A-A073-9264A2909A6E}' />
    </window>
    <window class='worksheet' name='Q2.2: Total Trips (for Nonmembers)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[:Measure Names]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938753895444487:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Duration in Minutes (bin):ok]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:id:ok]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[usr:Calculation_1369938753895444487:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60B60DD7-5593-4B24-BF01-E614604180A1}' />
    </window>
    <window class='worksheet' name='Q2.3: Duration Across Montreal '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:Calculation_1369938753844625411:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:Calculation_1369938753844625411:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C2011357-0382-4CE6-A0D5-39782F50A48C}' />
    </window>
    <window class='worksheet' name='Q3.1 &amp; 3.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938754056204303:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938754058690576:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938754058989585:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{19C44734-D042-4B84-B42D-D42C27211C87}' />
    </window>
    <window class='worksheet' name='Q3.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[hr:Calculation_1369938754171322405:ok]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[hr:Calculation_1369938754199085100:ok]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938754056204303:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938754058690576:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[none:Calculation_1369938754058989585:nk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[thr:start_date:qk]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[wd:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A52EF68D-3B94-4803-8117-85A4709DFC36}' />
    </window>
    <window class='worksheet' name='Q3.3 - Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:Calculation_1369938754059198482:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:Calculation_1369938754199085100:ok]</field>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E9DF638-A09A-4A4F-AA42-A3924E8C1DCB}' />
    </window>
    <window class='worksheet' name='Q4: Member Usage Across Montreal (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wd0upb0stfn1g1a4s0830mny6cq].[sum:is_member:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{39CA6EAB-F44A-4396-BEC9-A363C2532DA0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Q1.4: Top 10 Stations for Roundtrips'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2.3: Duration Across Montreal '>
          <zoom type='entire-view' />
          <highlight field='[federated.1wd0upb0stfn1g1a4s0830mny6cq].[avg:Calculation_1369938753844625411:ok]' type='size'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Q4: Member Usage Across Montreal (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B600B6D7-C1EC-4AD4-A09F-ED08EA30EFCE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.1: Total Trips by Month' width='192'>
      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
      CO0phAjb/wGBsxFfMELycAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q1.2: % of Trips by Month and Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAf1klEQVR4nO2dWWxk15nff/feurUvLO6s4k72IrW63ZLaarVaVqzYTsY2MhgHcKBZMYAz
      GQwG8xYgmIcEHiDIwwBBXpOHIA6CWWAMrAEGYwuwLI1s2bJ6kdzTYre4FqtIVrE21r7fJQ9s
      VqvVrDaL3VVsss7vhVWse+r77vKvc+6553+OZJqmiUDQo8hHnYBAcJR0RADFYrETX3us4h9l
      xVqpVNB1/cji12o16vX6kcVv5/x3RACGYbRXwNRZXFre96NCoUAymehofNM0WFpawgSWFu7Q
      aKv048cHSG7H0Nov1jL+YQQY2441XxcyCSqHPBCmaR4ovl7JshzZPuCXGpTKlQNt2ur4F7Mp
      7iwskCnc/x7LwaJ3lko+RT6TI183iNz5CGw+/C6Fqm5BtciUSwWGhoY7l4BpktzeYiwwQnQr
      ydBUlmgojMc/iNPjo1rMMx4MdC4+sJNMUKjqTIz3kYhmiCUzePt8OBWNTFnj3DOnkSWpozkk
      EtvoDR2rxaBaLtHI1RkNDJNJZhgPjjzxeJHNBJoJ+YyCZnFRymSolTPkygYDQ36mR32ENnLk
      C1lGRwb41e27XH31NdwO9VDx0skkNo8ft11m8e4Cqqvv6bgH2IhsYXUohEObuLx+VMmgUtOY
      mZ6k1KXmzNjYEAu3FxkaHmRnZwdDK5MtG8TDS5iKvaOxTdPERKJaLlJvVCkVi/SPTKJKGuuh
      yL1f9I5mgGFoyLKFYrFIIZ9DN6FvoJ+7H93E2dffgZAGyVSCXGKbZCZHtVYnny9iKlZcNguF
      UgmtUaFUN7FbZeqGwsTkJC774X+zA1Oz+G0an3yyQDSeQ9f0p6MGGAzO0O/vI5PJsvzpbQKz
      z+B1WJElGBkZQZI63J6WJAZHJrG7irjtDgzFwKhp+Af9xCNpRof9HQ2/k4zh7B9hwGVhcyPF
      0OgIitUB+hBuh41s1aDDP/5E1tYYn5qjmo2Tr1oYG+zHarehOlz4nU/+MjENg1PPXqDPZSWd
      LZNObeMfHKSUiRFN5rl08Sxrm0mGB0fIpct4vV7Map5STcNtP1wNUCnmiWfKzJ95llQ0jN3t
      RtrrBi0UCk/sxq1UKuFyuQ5VtlqtYrc/3i/u48T/LIZWJ1us0t/nbatcuVzG4XAgdfqqbUG1
      WkVVVRRFeazvaVRLlDUZn9vRVrl6vY4kSahq+xdqKh4Fq5tBf3vH/LO0c/6lTjwHyOfzeL2H
      34GTEN/j8RyZAEqlEjabDYvlaCr4arWKJEnYbLYjid/O+X8q7gEEgqNCCEDQ0wgBCHoaIQBB
      TyMEIOhphAAEPY0QgKCnEQIQ7Itpmty9e5disUgoFOJnP/sZmqYBuw9N7969i2ma3Lhxg0wm
      w40bNygUChQKhSPOvD2eiqEQgqcPXdfZ2trC5XKxsLCA3+8nHo8TCAS4fv06tVoNVVX51a9+
      Rb1ep1Kp8N577zE7O8vs7OxRp39ghAAE+2KxWJiYmGi+3vMYbG9vE4vFSCQSZDIZstksLpeL
      SCSCLMuk02mmpqaO7Cl0uxyPLAVdp1arsbS0hMvlYmhoiGQyicvlQpZlfvd3f5elpSVOnz7N
      ysoKMzMzuFwuLBYLsVjssccgdRMxFqhD8cVYoMcbC2QYBrdv3+bChQvcvn0bwzD4whe+gK7r
      fPDBB5w/f554PI6mafh8PiqVCl6vl8HBQUql0oHPv6gBTjCapiHLMrVaDcMwcDgcyLJMtVrF
      YrFgmib1eh273Y6mac3Rm7K82zdi6g1q7/3lwQNKMvbX//yJ5F4ul1lYWODcuXOEQiEAzp8/
      zyeffMLs7CzXr19HlmVUVWVrawtFUchms1y5cgW3233gOEIAJxRN0/j+97/PV7/6VdLpNB9+
      +CG/9Vu/haqqvPXWW9hsNlRVpb+/H0mSCIfDzMzMcO7cuftDiQ2dxq2/OXhQSXliAnC73YyM
      jKDretNiqes6uq7jdruRJAmr1YrNZqOvr695o768vMzzzz9/4DiiG/SEYrFYePHFFwE4d+4c
      s7OzDAwMYLFYmk2UyclJ1tfXaTQa1Ot1FhYW+PGPf3ykhv490uk0yWSSxcVFfD4fHo+HbDbL
      qVOneP/99zlz5gxWq5VGo8G5c+d46aWXGB0dZXBwsK04bdUAjUqRazdv8cWXX+LOP/8zDRT6
      PTYqugWPXWViahr5aJq9gs9RrVa5efMmQ0NDFItFnnnmGSqVCrFYrPkLWqlUkGWZ8+fPY7PZ
      0HWddDp91KkDMDAwwBtvvLHvZ9/85jcBmr1UAHNzc83X+Xz+wHHaEoDqcBMY7seUZAxdQzcl
      DN2glE1TkiRqhsz89DiGYTQfmhwFuq4fafy9/T+qm2Bd17HZbPzO7/zOQ59NT08zPT3dfP/C
      Cy888Hev/O6L9o+hpmnouo4kSY99DszcBvrt7x94e8kbQLnw222d/7YEUCsX2IrGkJ1eDFlF
      1k2mTp1BXt+gUc2jNerIsowsy0faD6woypHG39v/oxKAoigoioIkyyxv7hy4nCxJnJ4YaL43
      zfaPocViaYr/cc+BVk7R+Pj/HXh7eewithd+v63z314NYHNy6eVXUBQLwdFhTCQsssLMzBSm
      aSBuKZ4uKjWN//Q/3z7w9jZV4ft/8e0nFj+bzeL1elldXUWWZWZnZ5EkiVwuh9vtJhQKIUkS
      Q0NDmKaJqqpd91K3dcXKioLdbkdVLVgsKuq9XzlZllEUC4oiBCDYJZ/P81d/9VcA2O12bty4
      gWma5HI5/vZv/xZd17Hb7dy8eZPr16/zwQcf8Mtf/rLrM8qJK1bQEbxeL6dPn0aWZZxOZ/O1
      z+drvna73czMzODz+Uin0yQSCd5///2u5imeAwg6QiqVYmVlhWAwSLVabT65lSSJpaUlBgcH
      qVarzZtvi8VCNpvF4WhvCpbHRQhA0BEGBwf5kz/5kwf+NzKyO73iH//xHz+0/cWLF7uS1+cR
      AhB0jEyhwp315IG397ntPDfTwTlg90EIQNAxQrEsf/k3vzjw9udnh/mv//5fdjCjhxE3wYKe
      RghA0NMIAQh6GnEP0CHq9To/+MEP+MY3vsHy8jKFQoEvfelLmKbJX//1X/Ptb3+bu3fvEg6H
      CQaDZDIZpqenmZycxOl0HnX6PYOoATqEqqqcPn2aer3OrVu3KBQKTSPK6dOn0XWdc+fOYbfb
      KZfL5PN5rl+/zo0bN4469Z5C1AAdYm9oscfjYXBwkP7+frLZLBaLhXQ6TTqd5uOPP+YLX/gC
      gUCAn//85xiGQa1Wa5Z/6623ePXVV7lz5w7VapWrV6+i6zrvvPMOwWAQ0zSJxWKcPXuW9fV1
      5ufnmwYXwf11GnK5HLVajZGREUzTJJlM4vf7KZVKogboFLquMz4+jqqqfO1rX2NiYoKBgQEa
      jQYzMzMYhsHFixepVqsoisLly5d55ZVXHnAzDQ8PU61WyWazzTEyGxsbzM/Ps7a2Ri6X4/Tp
      09y8eZN6vc7777/PwsLCUe3yU0WpVOJ73/sejUaDt99+m1QqBcDi4iILCwu88847bG1ttV8D
      FPN5nB4v9XKedKHGgMdGRVdwqDJWu0MYYu5hs9l49tlnm++npqaar8+dO/fQ9nt+3D07oqIo
      TVP5Cy+8QCQSIZlMNv2w9XqdarVKOp3mypUr3LhxA7/fT7Va7eRuHRtcLlfzOM/NzfHRRx9x
      5swZ7HY7iUSC4eFhHA5H+46w27c/4YXLL7FwZ5HRiSk2o9touo5pGEzNncZpO9z6TSeRZLbM
      n/6Pfzzw9n6Pnf/1H/8NsFt9x+NxyuUyIyMjKIqCz+ejWCyiaRrf+MY3qNVqRKNRgsEgNpsN
      WZbJZDKd2p1jRSaT4c6dO7jdbgqFAjabjZ2dHSqVSnN6l0gk0r4jbHTID3odTVLJxLfx9HnY
      SeSxqCqR8Dqn5+eEI+ze/uu6Rq1x8AWrq/X7eVutVl5//fXmZ5+1/125cgUAp9OJ3+9H13X8
      /t2F/Hw+H+Vy+Z6BvP2Fhx84bo/pCGt/vWbzgfiG0e5i32Yzvsfj4Y/+6I8e2qK/v59Tp041
      37clgEoxSzyZRnL1M+ixUtJkxicmsKgOtEoOQ3UJRxj3HWHtThAlSTyQt1nJUv677xy8vM2N
      89/936YjTDHab48+EP8xHWF706sclM+7yDS53Qm2pOZxt1gsFCt1ljYe7XFuaw8d7j5evvrq
      vXf3F04OBkaB0TaTFfw6TEPDSC0evIDd17lkjiGbyTx/8b33HrmN6AUS9DRCAIKeRghA0NMI
      AQh6GiEAQU8jBCDoaYQABD3NiR0NWq/XefPNN/nN3/xNAP7+7/+eN954g1KpxM9//nO8Xi+K
      orC9vU0wGKRQKDA2Nsb09PRjLewgOF6c2BpAURSCwSCapnHt2jV8vt2HRC6XC4fDQa1W48KF
      C6iqys7ODrlcjmvXrnHr1q0jzlzQTU6sACRJQtd1KpUK5XKZ27dvk81mKRQKnDt3jnQ6zbvv
      vstLL73E1atXUVWVsbExSqXSUacu6CIntglUKpVQFIVkMsnXv/51rly5giRJSJLEysoKX/7y
      lwmHwywuLnLp0iVeeeUVdF2n0WgcdeqCLnJiBeDxeHj11Veb7/v6+pqvL1++DOwuwrCH1Wrt
      XnKCp4YTKwDYHQz1X/73uwfefrTfzX/7D1/pYEaCp422BGCaJrlMBq+/HwmDRDKNx26hrFtw
      WmXsTtdT5QjTdYN0vnLg7W3WE/17INiHtm6CtVqJxcUlGgbENkKENmJEEynSiU1Ca6uUKrVO
      5SkQdIT2HGF2N8MDPoxGmbVwlFKlzNjQWTLxPFa7jehWhFNzT48jTG/XUfQ5R9Jhue8Iay++
      aT7oyDLbLL+X/95yor3sCDvo8W/bEZbcySK5Bnj1S19iK7pFcGwUq3XPEeZ5qhxhSruOoiew
      rhU8OUeY0Wb5vfyFI0w58PFv2xH20stXmu+DgSAAY6PDQHentRYIngQn9kGYQHAQhAAEPY0Q
      gKCnEQIQ9DTiyc8jyGazeDweCoVCc/py0zT59NNP8fl8OBwOqtUqfr+fXC5HX19f2z0/gqNF
      CKAF1WqVN998k29961vE43FCoRADAwNomsbCwgKvv/46v/jF7vpXlnsLhlutVp5//vm2u/8E
      R4c4Uy2w2+0899xzwG6/vtfrxePx4Ha7ee655/jFL36Bw+EgmUxit9tJpVLEYjF++ctfHnHm
      gnYQNUALCoUCd+/epVarsbGxwfDwMKlUikajQTgcpr+/H4fDQaPR4LXXXuPWrVtomka5XD7q
      1AVtIATQAo/Hwx/8wR/s+1kgEHjof5+d1z+fz3csL8GTpaUAbt/+FdHQMiOnLnHxmZlu5vTU
      YNaLaKsHH06N6kSdF8OpjxMtBVBIRRmZfRZbD/dqmKU01bf+/MDbS96AEMAxo/VNsCQTXl3C
      5nZ3MR2BoLu0FEC+UGJwoJ/33/4hubLwyQpOJvs2gTbDq9gdDraicc49fwmHdbcZZJomyXic
      gZERMvEoxYbMgEelrFtwWRWcbs9T5QgTCH4d+wrAPzDMUKHM2eeG8Pj8WC27FYVWK7MR2cA3
      NIzV6aO8sU6tYkMyGyQqVSbmnsHntgO7YjlKDhv/cfM+0vLmMc//ofLtf9de+YPmsa8AXG4P
      S7euofiDXLh4CZdjd6Y01e6iv88NSGRTUfzDQVS9RGgzj93pIrm9ifeeI6xdN9STpOmIatOR
      hGk+kHf7jqzd2I/jCHus+JifcYMdzhH2QM6HcITtxT6sI+yz8dst//D+H9IRtrKyxG986w10
      w8Rqszf/XylmSWfzSNEo2VwRm6ZwZn4KXbY/pY6wNh90f86R1L4ja3dYhHCEHXNH2PrSbZaX
      VwE4e+ESM8EhYNcRduml3Tl1mAg2tx8ZHgQG20xWIDh69hXAxZdeY3BwqNu5CARdZ18ByIbG
      0tISAEOjQfxeV1eTEgi6xb6NtHqtylZ4lWvXrhFL5bqdk0DQNfYVwOjEDLpWoc9np5AvdDsn
      gaBrtLxNf+75lxn0+RgZEdOdCE4u+wqgUsxy7do1+gZHiMei3c5JIOgaLWuA/r4+8hWDi+fP
      djMfgaCr7CsAh7sPvV6iVtrh7nK42zkJBF1jXwEYhoHdZqNUquASw6EFJ5h9nwNc++A9xiZP
      MWKa9Pd7up2TQNA19hWArjUoFosAuPuOblCbQNBp9hXApZf/BVarFUkSg/sFJ5t9BfDxtfcJ
      x5KcOX2WwOQsw/3ebuclEHSFfQXw4uWruD+9g6Q6cLvuD4c2TYOtjU3GJiZJb29Qw4bXyq4j
      zKbg9vqEI0xwrNi3F0i12knEtsinY3y6stn8v1arkk6l0LQq6YJGJb9DPJ0hm4qyHlojmxeL
      TAuOFy0fhE1NTlIoN5iauj/uX7U78bodgIyha+iGwXgggGbI2Jwu0knx1FhwvGhp+ZmeP0tg
      +gyqVW3+r1LMUtFM4sks4yM+aqYNh8vJ7Mwser2AYRHPDATHi5YCeO/tf8Q1OoWKnReePwfs
      PiF+9tm+h7Z1uRT4zL2CQHBcaNkE8nl9/PP1azj7hw/hzRcIjgctBZBMpQkExnjnH/6O7ezB
      V1sXCI4TLQXg8XqRJZnnzp8/8jl+BIJO0VIAg4OD1Ooao7OnCfid3cxJIOgaLQWQyuTo73eR
      Saa7mY9A0FVa9gKNjU+DVsWwitGggpPLvjVAZjvMj370Q+4srWJI1m7nJBB0jX0F4B+d4tL5
      szQaOpIkboAFJ5eWTaCabnL+/HkG/aIJJDi5tLwJHh8bJZ3eoVITi2MITi4tBRBaWwarQjSy
      0c18BIKu0npalP5BFm/9Cu/ww0uCCgQnhZYC0FUnv//7v00+GetmPgJBV2l9E5xP88MfvcMX
      X/vqwx+aOncX7lDHwoDHSllX8dgURgJB4QgTHCtaCiCdTOALzKPXq8DnhjqbJtValbppoaxK
      lMtZcg2dmqkwGRhuLhF0VOi6vrtEkdHuEkfmA3kfZokkTdMea4mkx4tvNuMedomkB87bIZZI
      2ot/2CWSPhvfaPf8cX//D3r8Wwrg0uWXyZYNVIv60GeGXkeyunEadYITE4TDG9idUK8UkOXR
      p2iJpMMtMbSHWCKpR5dIAriz8AnewCTFpWUGX7r4wGey6mQ6MEgdFafDzsz0DEajjGERg+YE
      x4t9BWAaGm6Pj9U7n/Lav/7WvgX7Bu4voeRwKHBvJUmB4Dixbx1184OfUihXuXD5KwQHxPJI
      gpPLvgIoFrIkUzu889YP+HRddIMKTi77NoG+/Bv/ttt5CARHQpsrSQsEJwshAEFPIwQg6GmE
      AAQ9jRCAoKcRAhD0NEIAgp5GCEDQ0wgBCHoaIQBBT3PIQfsmoeVFNMWJTao1HWFj4xPCESY4
      VhxOAFqFje00Xp+OYZUoFTPkDaiZCtPjo8IRJhxhx98R9khkK16PG6tsMjEzx8b6BqbZoFEt
      I8uycIQJR9jxd4Q9EtnCM2fmqTRMHFYr0zPTmFoNQxbziAqOF4f+mbY5XNgc915bZbA+7B0W
      CJ52RC+QoKfpeEPdNE1KpRJutxvTNEmlUvj9fgqFArqu43LtWi4VRUFVVSRJdCMJukfHBXDn
      zh2uX7/OH/7hH/LRRx9RqVSo1Wrs7Oxw/vx5bt26Rb1ex+12c/XqVSEAQVfpaBOoUqnw05/+
      lGKxSK1Ww+l0EovFsNvtTE9P89FHH2G1Wkmn06yvr/Puu+92Mh2B4CE6WgPYbDZ+7/d+jw8/
      /JBMJkOj0cDlcmEYBoVCAYfDweXLl3E6nWQyGZxOMa+QoLt0VACyLOPxePjqV3fnFx0dHeXC
      hQsPbffiiy92Mg2BoCUdFUCpUmdpc+fA2zvtKmcmBjqYkUDwIB0VQCSR57v/558OvP18sJ//
      /qf/6oH/GYbB9vY2gcDuOgWpVIqBgQGi0SgWiwWbzUaj0cBut+Nyudp++ijobZ76q+X27dv8
      5Cc/ASCfz/Pmm29SLpf55JNP+PDDD7lx4wYff/wxH3zwAZVK5YizFRw3nmoB7PUibW9vUy6X
      8Xq9nDp1CovFgmmabG9v43K5SCaT5PN5Pvzww6NOWXDMOLoRawfA4XDwZ3/2Z9y8eZNisUix
      WGR1dRW/34/X6+XMmTN88YtfxO12k8vlsNnEBL2C9niqBbDHZ3uJvvOd7zz0+fnz57uZjuAE
      cWgBmKZJtVpFVWQapoQqSygWlSf5INesZNBW/+ngBexe1PmvPLkEBCeeQwtgJ77BJ6EEwQEX
      VQ3sqoXpuTks0pO7rTDyUao//s8H3l4ePCUEIGiLQwlAb1T45NMQmq7BkI9yMUtZgtryGs+c
      mm06ooy2HVGfcwQd0lElHGHCEdZRR5hssfPK1VdYD68zNzuDat1Gq+QwVOsDjjC5bUfUg44g
      /ZCOKuEIE46wjjrCJElCVVVOzZ8CYGpyHBg/zFcJBEfKU/0cQCDoNEIAgp5GCEDQ0wgBCHoa
      IQBBTyMEIOhphAAEPY0QgKCnEQIQ9DRCAIKeRghA0NMIAQh6GiEAQU9zaENMuZijqkm4bQo1
      U8GmSFisNrFEkuBYcUgBGOQLZbYTCRx2G7phYpEkpubmsanHwmYsEACHFoCEZNTx+YewUWUz
      nkZWFNbWQpw5NSccYcIRdrIdYRga65Eo3oFhpuan0GX7PUeYQzjChCPs5DvCkFUuX7nSfDsx
      HgACh/oqgeAoEb1Agp5GCEDQ0wgBCHoaIQBBTyMEIOhphAAEPY0QgKCnEQIQ9DRCAIKeRghA
      0NM8xnDoPBoWbIpJ3VCwWcRwaMHx45CD4Rqsrm8CBjbVgiaGQwuOKYdrAul1bO4+XE4HdptK
      sVgkXy6zthZ6wukJBJ3lcD/XFgeUQ5Sw8tzZOSSLA62Sx7A6nnB6AkFnOZwAJJnTzz7XfCuG
      QwuOK5JpmiZAoVDg3svHplQq4XK5aGg6uVLtwOUsikyf245hGMiyjKk3MMs7Bw8sW5BdA834
      mm6QLVYPXFyRJfwex/34hoZZSrcRX0Z2DVEul3E4HBimSaZw8PiyJNHv3Y0vSRKYBmYpdfD4
      koTsHt5dvVNVkWSZnXylneIMeJ3N+BJgFBMHjw/InhHq9TqSJGFKMvk2zr9qkfG5Pnv+65jl
      zMGDKyqys7+t668pgCdJPp/H6/UeuvzeATjO8T0ez+5FfMj4kiQdunypVMJmsz3grmqHvUvi
      sPGr1SqSJB164fJunn/lu9/97ncPHakFtVrtgZ2PRtbYjGfw2mUWV0K4vX5SW6votj6MSo7V
      0AaePj+We32onz/wsY0QG/EdvA6VpeVVnJ4+dqIhGhYv2XiESCSC7PDitKn7xt/eXCcSS+F1
      WVlaXsHh9pGNh6nJLqR6keXVdTx9/ViU/ePHtyJEYgm8LhvLyyvYXT7yiQgVHBRSUSKRdXSL
      B7fD+kD8ve9JRDcIbyXwuOwsLy9jdfooprcoGVZUs8rSyhourx/VIjfjfzaH5PYm4c1tPG4H
      y0tLqA4vpZ0YxYZCOZcgHA7TkBx4XLv73Gg0mtZMgFR8i/WNGB6Pi5WlRRS7h2ouQb4Gdllj
      aXkVm9uHTVX2jZ9ORFmPbOHxullZ+hTZ5qaWT5Gp6NSLO6yvh6mZFrzu3XvAPUvkngA31lfY
      TudxqSaLq2F8fX62I6tIjj4axQxrkS18ff0oLc7/VniVaDKH2yaxuBLC4/OT3FjFtPWRioYI
      RzaxufuwWy2/5vpTWFxZu3/9Wfu68yBscDSIVC0R2opzan6CzUgUi1klW9ZYWlrCxORR9dDA
      SAClWmZ9M8bs/BRbG1FUs8pOucHYxDRuhw2X096yfP9wAFWrEopsMjM/Q3QzisWskSnVWVpa
      AsB4RAL+oVFsRp219Q0m52eJbW2hmA2ypRojwUk8DgceT+sOgL7BEZyyRmgtzMT8KeJbmyim
      RrZYYWlp+dfG9/UP47YYrC2HCM6fJh7dQEEnWywzNDqO3+3E5W4d39c/hM8usbq4wtjcWRLR
      DSRMcoUiy0vLGCaPbP56/YP4nQqrd5YYmTtLMraJJEG+UGBgOMBQnxuH09my/EhgAqNUJBRN
      cHZujHA4hmRUKdSM3eP/a+IPjY1jVoqEonFOz4+zEYkhG1VyVZ3g1Bxuhw2H3dqy/P3rb/uB
      6y9T0bohAJPN8BpDUzNYMTFNE0lWcLt2D5is2pkc6ycWb9XWNdmKhBiYnMYq7c6cgCTjdrt2
      26iNCjVsOCytqmuT2EaIvsAUDkXePdCShNvtBkBSrMxOj7G1GWtZfntzHc/IBG5VaQrV49kt
      b+gNyrqCU211KE3iW2HsA2N47SqmaWICbo8HaTcB5uYm2IpEW5ZPRCOovhH8LiuYgCk1y5um
      Qa6i43WoLcpDMrqB5BpkwGtvXmgej+fet8vMzU0R3dhqWT61vYVh72fI72yWb+ZvGqQLNfo9
      rX6ATCKhVUZnZu/1uJhIigW3c1ewFpuTQL+TxE6+ZfmN9VVGpmdR4aHrR68V0RQnNqX1+X/4
      +pPxuFxAV4ZCGNRrGolojNHxMVbXtggE+onECxRSW0xPBYnEdgiMDrbcgXqtQTK2Wz60FiEY
      HCIcy1FKR6lUawQnHrVEq0mt1iC1HWMoGCC8FiYQHCEc3aG0E2N6epLVUIzxibFHlk/HtxkI
      BNhYW2NsfIz1rRSlnW2q1QqB8Uke1Vqu1RpkEnH6xgJsra0yNh4kvBmnlEkwPTPNysoG41PB
      R5Svk00l8I4GiK4tMToeJLK5TSmbpFYpMTo+/ej49Tq5dALPSJB4aImRwASRjS3KuR2mZmZY
      XQ0TnGx9DGu1GvmdJM7hAMnQEsNj42xsbFLKZ6hUK4wEHrX/OvVag0Q0xnhwhMW1OMFRH9FU
      kUxii+mJMbZ2yowMtGqz379+AsFRVtaiBMf8bCYK5JJblKsNJiYe1QO53/U3QDiep5ja4v8D
      /BRwFyPBjWkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q1.3: Percentage of Monthly Trips by Members in 2017' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.4: Map of Top 10 Stations for Roundtrips (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.4: Top 10 Stations for Roundtrips' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.1: Relationship between % of roundtrips and % by members' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Q2.2: Total Trips (for Nonmembers)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.3: Duration Across Montreal ' width='192'>
      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
      M4Fmtno4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q3.1 &amp; 3.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3.3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q3.3 - Table' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q4: Member Usage Across Montreal (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
